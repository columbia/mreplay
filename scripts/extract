#!/usr/bin/python

import scribe
import mmap
from optparse import OptionParser
import mreplay.mutator

def main():
    usage = 'usage: %prog [options] input'

    desc = 'Shrink a scribe log file'
    parser = OptionParser(usage=usage, description=desc)

    parser.add_option("-o", "--output", dest="output")
    parser.add_option("-b", "--before",
            metavar="ID", type="int", dest="head", default=None,
            help="Only keep events before ID")
    parser.add_option("-a", "--after",
            metavar="ID", type="int", dest="tail", default=None,
            help="Only keep events after ID")

    (options, args) = parser.parse_args()
    if not args:
        parser.error('Give me an input log file')
    if len(args) > 2:
        parser.error('You have extra arguments')
    if not options.output:
        parser.error('Give me an output log file')

    if options.head and options.tail:
        parser.error('mutually exclusive arguments')

    cutoff = options.head if options.head is not None else options.tail
    if cutoff is None:
        parser.error('give me some arguments')

    src = args[0]
    dst = options.output

    with open(dst, 'w') as dst_logfile:
        with open(src, 'r') as src_logfile:
            src_logfile_map = mmap.mmap(src_logfile.fileno(), 0, prot=mmap.PROT_READ)
            events = scribe.EventsFromBuffer(src_logfile_map)

            events |= mreplay.mutator.SplitOnBookmark(cutoff=cutoff,
                    do_tail=(options.tail != None))

            for e in events:
                dst_logfile.write(e.encode())

if __name__ == '__main__':
    main()
